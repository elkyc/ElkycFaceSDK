// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ElkycFaceSDK
import ElkycCoreSDK
@_exported import ElkycFaceSDK
import FaceSDK
import Foundation
import Swift
import UIKit
import _Concurrency
public class FaceLiveness : ElkycCoreSDK.ElkycStep {
  public struct Response {
    public let image: UIKit.UIImage?
    public let isLive: Swift.Bool
    public let guid: Swift.String?
  }
  public var stepId: ElkycCoreSDK.ElkycStepId
  public init(attemptsCount: Swift.Int = 2)
  public func start(from viewController: UIKit.UIViewController, completion: @escaping ((Swift.Result<ElkycFaceSDK.FaceLiveness.Response, Swift.Error>) -> Swift.Void))
  public typealias Output = ElkycFaceSDK.FaceLiveness.Response
  @objc deinit
}
public class FaceMatching : ElkycCoreSDK.ElkycStep {
  public var stepId: ElkycCoreSDK.ElkycStepId
  public struct Response {
    public let firstImage: UIKit.UIImage
    public let secondImage: UIKit.UIImage
    public let isMatched: Swift.Bool
    public let similarity: Swift.Double
  }
  public struct InputImage {
    public enum `Type` {
      case printed
      case rfid
      case live
      case liveWithDoc
      public static func == (a: ElkycFaceSDK.FaceMatching.InputImage.`Type`, b: ElkycFaceSDK.FaceMatching.InputImage.`Type`) -> Swift.Bool
      public func hash(into hasher: inout Swift.Hasher)
      public var hashValue: Swift.Int {
        get
      }
    }
    public let image: UIKit.UIImage
    public let type: ElkycFaceSDK.FaceMatching.InputImage.`Type`
    public init(image: UIKit.UIImage, type: ElkycFaceSDK.FaceMatching.InputImage.`Type`)
  }
  public init(firstImage: ElkycFaceSDK.FaceMatching.InputImage, secondImage: ElkycFaceSDK.FaceMatching.InputImage, threshold: Swift.Double)
  public func start(from viewController: UIKit.UIViewController, completion: @escaping ((Swift.Result<ElkycFaceSDK.FaceMatching.Response, Swift.Error>) -> Swift.Void))
  public typealias Output = ElkycFaceSDK.FaceMatching.Response
  @objc deinit
}
public class FaceCapturing : ElkycCoreSDK.ElkycStep {
  public var stepId: ElkycCoreSDK.ElkycStepId
  public init()
  public func start(from viewController: UIKit.UIViewController, completion: @escaping ((Swift.Result<UIKit.UIImage, Swift.Error>) -> Swift.Void))
  public typealias Output = UIKit.UIImage
  @objc deinit
}
extension ElkycFaceSDK.FaceMatching.InputImage.`Type` : Swift.Equatable {}
extension ElkycFaceSDK.FaceMatching.InputImage.`Type` : Swift.Hashable {}
